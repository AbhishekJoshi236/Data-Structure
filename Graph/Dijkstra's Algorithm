#include<bits/stdc++.h>
using namespace std;

int main(){

    int v,e;
    cout<<"V & E: ";
    cin>>v>>e;

    unordered_map<int,vector<pair<int,int>>> adj;
    cout<<"u, v and w: \n";
    for(int i=0;i<e;i++){
        int u,ve,w;
        cin>>u>>ve>>w;
        adj[u].push_back({ve,w});
        adj[ve].push_back({u,w});
    }

    vector<int> distance(v,INT_MAX);
    set<pair<int,int>> st;
    
    int src;
    cout<<"Source: ";
    cin>>src;

    distance[src]=0;
    st.insert({0,src});

    while(!st.empty()){

        auto p = *(st.begin());
        int NodeDist = p.first;
        int node = p.second;

        st.erase(st.begin());

        for(auto x: adj[node]){
            if(NodeDist + x.second < distance[x.first]){
                auto record = st.find({distance[x.first], x.first});
                if(record != st.end()){
                    st.erase(record);
                }

                distance[x.first]=NodeDist + x.second;
                st.insert({distance[x.first], x.first});
            }
        }
    }

    cout<<"ANSWER: ";
    for(int i=0;i<v;i++){
        cout<<distance[i]<<" ";
    }

    return 0;
}

/*
5 7     

0 1 7 
0 2 1 
0 3 2 
1 2 3 
1 3 5 
1 4 1 
3 4 7
0           //source
*/
