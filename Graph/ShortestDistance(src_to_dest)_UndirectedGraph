#include<bits/stdc++.h>
using namespace std;

void shortestDistance (int src,int dest,vector<int> ans,vector<int> parent,vector<int> vis,vector<int> adj[]){

    parent[src]=-1;
    vis[src]=1;

    queue<int> q;
    q.push(src);

    while(!q.empty()){

        int front = q.front();
        q.pop();

        for(auto x: adj[front]){
            if(!vis[x]){
                vis[x]=1;
                parent[x]=front;
                q.push(x);
            }
        }
    }


    while(dest!=src){
        ans.push_back(dest);
        dest = parent[dest];
    }
    ans.push_back(src);
    
    reverse(ans.begin(),ans.end());
    for(auto x: ans){
        cout<<x<<" ";
    }
}
int main(){

    int v,e;
    cout<<"V & E: ";
    cin>>v>>e;

    int src,dest;
    cout<<"SRC & DEST: ";
    cin>>src>>dest;

    vector<int> adj[v];
    vector<int> parent(v);
    vector<int> vis(v,0);
    vector<int> ans;

    cout<<"Edges: ";
    for(int i=0;i<v;i++){
        int u,ve;
        cin>>u>>ve;
        adj[u].push_back(ve);
        adj[ve].push_back(u);
    }

    cout<<"\nSHORTEST PATH: ";
    shortestDistance(src,dest,ans,parent,vis,adj);


    return 0;
}
